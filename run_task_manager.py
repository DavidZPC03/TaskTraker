import os
import logging
from app import app
import routes  # noqa: F401

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def main():
    """Funci√≥n principal para iniciar la aplicaci√≥n."""
    port = int(os.environ.get("PORT", 5000))
    
    # Usar la variable de entorno real de Railway si est√° definida
    public_url = os.environ.get("RAILWAY_PUBLIC_URL", f"http://localhost:{port}")

    print("\n" + "="*50)
    print("TASK MANAGER - Sistema de Gesti√≥n de Tareas")
    print("="*50)
    print(f"\nüåê Servidor iniciado en: {public_url}")
    print("Para acceder a la aplicaci√≥n, abre tu navegador en esa direcci√≥n")
    print("\nInformaci√≥n de rutas disponibles:")

    routes_info = [
        ("P√°gina inicial", "/"),
        ("Iniciar sesi√≥n", "/login"),
        ("Registrarse", "/register"),
        ("Panel principal", "/dashboard"),
        ("Gesti√≥n de tareas", "/tasks"),
        ("Gesti√≥n de categor√≠as", "/categories"),
        ("Anal√≠ticas", "/analytics"),
        ("Perfil de usuario", "/profile")
    ]

    for name, route in routes_info:
        print(f"  ‚Üí {name}: {public_url}{route}")

    print("\nPresiona Ctrl+C para detener el servidor")
    print("="*50 + "\n")

    app.run(debug=True, host="0.0.0.0", port=port)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nServidor detenido por el usuario. ¬°Hasta pronto!")
    except Exception as e:
        logger.error(f"Error al iniciar la aplicaci√≥n: {e}")
        print(f"\n‚ö†Ô∏è Error: {e}")
        print("Consulta el archivo de log para m√°s detalles.")
